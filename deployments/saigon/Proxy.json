{
  "address": "0xb759cB1eBA9F94573CcC9aE8B866aBC63A765E33",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb3d70d2c7dfb0b4741913c0bb84d5506da5382c3930a214cb3fae83ad8999809",
  "receipt": {
    "to": null,
    "from": "0x5a0A3eA25e05D1586D90F64Bdadb9a41c13fDB43",
    "contractAddress": "0xb759cB1eBA9F94573CcC9aE8B866aBC63A765E33",
    "transactionIndex": 0,
    "gasUsed": "461576",
    "logsBloom": "0x
    "blockHash": "0xc1973db8d3de36c70f2e8d696ad8ea57604d44a7bd361d4ac9ce7ba49034e5e7",
    "transactionHash": "0xb3d70d2c7dfb0b4741913c0bb84d5506da5382c3930a214cb3fae83ad8999809",
    "logs": [],
    "blockNumber": 23092834,
    "cumulativeGasUsed": "461576",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8de653acd9b149e51e8f8e23dfe31d80",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ncontract Proxy {\\n    bytes32 private constant IMPLEMENTATION_SLOT =\\n        bytes32(uint(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1);\\n    bytes32 private constant ADMIN_SLOT =\\n        bytes32(uint(keccak256(\\\"eip1967.proxy.admin\\\")) - 1);\\n\\n    constructor() {\\n        _setAdmin(msg.sender);\\n    }\\n\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    function _getAdmin() private view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    function _setAdmin(address _admin) private {\\n        require(_admin != address(0), \\\"admin = zero address\\\");\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = _admin;\\n    }\\n\\n    function _getImplementation() private view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    function _setImplementation(address _implementation) private {\\n        require(_implementation.code.length > 0, \\\"implementation is not contract\\\");\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = _implementation;\\n    }\\n\\n    // Admin interface //\\n    function changeAdmin(address _admin) external ifAdmin {\\n        _setAdmin(_admin);\\n    }\\n\\n    // 0x3659cfe6\\n    function upgradeTo(address _implementation) external ifAdmin {\\n        _setImplementation(_implementation);\\n    }\\n\\n    // 0xf851a440\\n    function admin() external view returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    // 0x5c60da1b\\n    function implementation() external view returns (address) {\\n        return _getImplementation();\\n    }\\n\\n    // User interface //\\n    function _delegate(address _implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n\\n            // calldatacopy(t, f, s) - copy s bytes from calldata at position f to mem at position t\\n            // calldatasize() - size of call data in bytes\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n\\n            // delegatecall(g, a, in, insize, out, outsize) -\\n            // - call contract at address a\\n            // - with input mem[in\\u2026(in+insize))\\n            // - providing g gas\\n            // - and output area mem[out\\u2026(out+outsize))\\n            // - returning 0 on error (eg. out of gas) and 1 on success\\n            let result := delegatecall(gas(), _implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            // returndatacopy(t, f, s) - copy s bytes from returndata at position f to mem at position t\\n            // returndatasize() - size of the last returndata\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                // revert(p, s) - end execution, revert state changes, return data mem[p\\u2026(p+s))\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                // return(p, s) - end execution, return data mem[p\\u2026(p+s))\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    function _fallback() private {\\n        _delegate(_getImplementation());\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    receive() external payable {\\n        _fallback();\\n    }\\n}\\n\\n\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    function getAddressSlot(\\n        bytes32 slot\\n    ) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8f8281b9669f10a3ebcbe24eff470f7534178a92f9e75206f4636584c7bdd550\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506100203361002560201b60201c565b61020e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161008b90610181565b60405180910390fd5b806100d660017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610460001c6100c891906101da565b60001b61011a60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b600082825260208201905092915050565b7f61646d696e203d207a65726f2061646472657373000000000000000000000000600082015250565b600061016b601483610124565b915061017682610135565b602082019050919050565b6000602082019050818103600083015261019a8161015e565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101e5826101a1565b91506101f0836101a1565b9250828203905081811115610208576102076101ab565b5b92915050565b6106e78061021d6000396000f3fe6080604052600436106100435760003560e01c80633659cfe61461005c5780635c60da1b146100855780638f283970146100b0578063f851a440146100d957610052565b3661005257610050610104565b005b61005a610104565b005b34801561006857600080fd5b50610083600480360381019061007e9190610504565b610116565b005b34801561009157600080fd5b5061009a61016a565b6040516100a79190610540565b60405180910390f35b3480156100bc57600080fd5b506100d760048036038101906100d29190610504565b610179565b005b3480156100e557600080fd5b506100ee6101cd565b6040516100fb9190610540565b60405180910390f35b61011461010f6101dc565b610242565b565b61011e610268565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361015e57610159816102ce565b610167565b610166610104565b5b50565b60006101746101dc565b905090565b610181610268565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101c1576101bc816103a8565b6101ca565b6101c9610104565b5b50565b60006101d7610268565b905090565b600061021960017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6102119190610594565b60001b610497565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3660008037600080366000845af43d6000803e8060008114610263573d6000f35b3d6000fd5b60006102a560017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610460001c61029d9190610594565b60001b610497565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff163b11610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610625565b60405180910390fd5b8061036460017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c61035c9190610594565b60001b610497565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610691565b60405180910390fd5b8061045360017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610460001c61044b9190610594565b60001b610497565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d1826104a6565b9050919050565b6104e1816104c6565b81146104ec57600080fd5b50565b6000813590506104fe816104d8565b92915050565b60006020828403121561051a576105196104a1565b5b6000610528848285016104ef565b91505092915050565b61053a816104c6565b82525050565b60006020820190506105556000830184610531565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061059f8261055b565b91506105aa8361055b565b92508282039050818111156105c2576105c1610565565b5b92915050565b600082825260208201905092915050565b7f696d706c656d656e746174696f6e206973206e6f7420636f6e74726163740000600082015250565b600061060f601e836105c8565b915061061a826105d9565b602082019050919050565b6000602082019050818103600083015261063e81610602565b9050919050565b7f61646d696e203d207a65726f2061646472657373000000000000000000000000600082015250565b600061067b6014836105c8565b915061068682610645565b602082019050919050565b600060208201905081810360008301526106aa8161066e565b905091905056fea264697066735822122056ebd95d89180a674e280672d4672643200e0b4705370a3461c9ad1722b5a56b64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80633659cfe61461005c5780635c60da1b146100855780638f283970146100b0578063f851a440146100d957610052565b3661005257610050610104565b005b61005a610104565b005b34801561006857600080fd5b50610083600480360381019061007e9190610504565b610116565b005b34801561009157600080fd5b5061009a61016a565b6040516100a79190610540565b60405180910390f35b3480156100bc57600080fd5b506100d760048036038101906100d29190610504565b610179565b005b3480156100e557600080fd5b506100ee6101cd565b6040516100fb9190610540565b60405180910390f35b61011461010f6101dc565b610242565b565b61011e610268565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361015e57610159816102ce565b610167565b610166610104565b5b50565b60006101746101dc565b905090565b610181610268565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101c1576101bc816103a8565b6101ca565b6101c9610104565b5b50565b60006101d7610268565b905090565b600061021960017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6102119190610594565b60001b610497565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3660008037600080366000845af43d6000803e8060008114610263573d6000f35b3d6000fd5b60006102a560017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610460001c61029d9190610594565b60001b610497565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff163b11610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610625565b60405180910390fd5b8061036460017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c61035c9190610594565b60001b610497565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610691565b60405180910390fd5b8061045360017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610460001c61044b9190610594565b60001b610497565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d1826104a6565b9050919050565b6104e1816104c6565b81146104ec57600080fd5b50565b6000813590506104fe816104d8565b92915050565b60006020828403121561051a576105196104a1565b5b6000610528848285016104ef565b91505092915050565b61053a816104c6565b82525050565b60006020820190506105556000830184610531565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061059f8261055b565b91506105aa8361055b565b92508282039050818111156105c2576105c1610565565b5b92915050565b600082825260208201905092915050565b7f696d706c656d656e746174696f6e206973206e6f7420636f6e74726163740000600082015250565b600061060f601e836105c8565b915061061a826105d9565b602082019050919050565b6000602082019050818103600083015261063e81610602565b9050919050565b7f61646d696e203d207a65726f2061646472657373000000000000000000000000600082015250565b600061067b6014836105c8565b915061068682610645565b602082019050919050565b600060208201905081810360008301526106aa8161066e565b905091905056fea264697066735822122056ebd95d89180a674e280672d4672643200e0b4705370a3461c9ad1722b5a56b64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}